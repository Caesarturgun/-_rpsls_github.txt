#coding:gbk
"""
第一个小项目：Rock-paper-scissors-lizard-Spock
作者：喀依塞尔・吐尔洪
日期：2021.11.27
"""
import numbers
import random #导入随机数模块1



# 0 - 石头
# 1 - 史波克
# 2 - 纸
# 3 - 蜥蜴
# 4 - 剪刀

# 以下为完成游戏所需要用到的自定义函数

def name_to_number(name):
    """
    将游戏对象对应到不同的整数
    """
    if name=="石头":
        return 0#返还结果
    elif name=="史波克":
        return 1#返还结果
    elif name =="布":
        return 2#返还结果
    elif name =="蜥蜴":
        return 3#返还结果
    elif name=="剪刀":
        return 4#返还结果
    else :
        print("Error:NO Correct Name")#else 直接输出，其他继续执行
        return "Error:NO Correct Name"
    # 使用if/elif/else语句将各游戏对象对应到不同的整数
    # 不要忘记返回结果


    pass #编写执行代码,代码完成后将pass删除


def number_to_name(number):
    """
    将整数 (0, 1, 2, 3, or 4)对应到游戏的不同对象
    """
    if number==0:#==为等于，双引号引用输入汉字
        return "石头" #返还结果
    elif number==1:
        return "史波克"#返还结果
    elif number ==2:
        return "布"#返还结果
    elif number ==3:
        return "蜥蜴"#返还结果
    else :
        return "剪刀"#返还结果

    # 使用if/elif/else语句将不同的整数对应到游戏的不同对象
    # 不要忘记返回结果

    # pass #编写执行代码,代码完成后将pass删除


def rpsls(player_choice):
    """
    用户玩家任意给出一个选择，根据RPSLS游戏规则，在屏幕上输出对应的结果
    """
    calculation = player_choice#给calculation赋值
    p=name_to_number(calculation)#调用函数  数字到字
    answer=random.randint(0,5)#计算机随机
    big=number_to_name(answer)
    print("计算机的选择为："+str(big))#在函数中出计算机的随机选择
    if p==0 :
        if answer in {3,4}:
            print("您赢了")
        elif answer in range(1,3):
            print("机器赢了")
        else :
            print("平局")
    if p==1:
        if answer in {0,4}:
            print("您赢了")
        elif answer in {2,3}:#elif:为在if下的其他，（后另有条件）
            print("机器赢了")
        else:
            print("平局")
    if p==2:
        if answer in {0,1}:
            print("您赢了")
        elif answer in {3,4}:
            print("机器赢了")
        else :
            print("平局")
    if p==3:
        if answer in {1,2}:
            print("您赢了")
        elif answer in {0,4}:
            print("机器赢了")
        else :
            print("平局")
    if p==4:
        if answer in {2,3}:
            print("您赢了")
        elif answer in {0,1}:
            print("机器赢了")
        else :
            print("平局")






    # 输出"-------- "进行分割
    # 显示用户输入提示，用户通过键盘将自己的游戏选择对象输入，存入变量player_choice

    # 调用name_to_number()函数将用户的游戏选择对象转换为相应的整数，存入变量player_choice_number

    # 利用random.randrange()自动产生0-4之间的随机整数，作为计算机随机选择的游戏对象，存入变量comp_number

    # 调用number_to_name()函数将计算机产生的随机数转换为对应的游戏对象

    # 在屏幕上显示计算机选择的随机对象

    # 利用if/elif/else 语句，根据RPSLS规则对用户选择和计算机选择进行判断，并在屏幕上显示判断结果

    # 如果用户和计算机选择一样，则显示“您和计算机出的一样呢”，如果用户获胜，则显示“您赢了”，反之则显示“计算机赢了”

    # pass #根据以上提示编写执行代码，代码完成后删除掉pass


# 对程序进行测试

print("欢迎使用RPSLS游戏")
print("----------------")
print("请输入您的选择:")
choice_name=input()
rpsls(choice_name)


